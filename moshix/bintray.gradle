apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

/*
 *
 *        ___                       ___       ___
 *       /\  \          ___        /\__\     /\__\
 *       \:\  \        /\  \      /:/  /    /:/  /
 *        \:\  \       \:\  \    /:/  /    /:/  /
 *         \:\  \      /::\__\  /:/  /    /:/  /  ___
 *   _______\:\__\  __/:/\/__/ /:/__/    /:/__/  /\__\
 *   \::::::::/__/ /\/:/  /    \:\  \    \:\  \ /:/  /
 *    \:\~~\~~     \::/__/      \:\  \    \:\  /:/  /
 *     \:\  \       \:\__\       \:\  \    \:\/:/  /
 *      \:\__\       \/__/        \:\__\    \::/  /
 *       \/__/                     \/__/     \/__/
 *
 *  Copyright (C) 2019 ZiLu https://github.com/zhongzilu
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//示例：'com.android.support:appcompat-v7:28.0.0'

//这部分相当于示例中的com.android.support
group = 'com.badboy.lib'
//这部分相当于示例中的28.0.0
version = android.defaultConfig.versionName

def moduleName = "moshix" //和Bintray上的package保持一致, 且这部分相当于示例中的appcompat-v7
def repoName = 'lib' //这部分是Bintray上自己建的Repository
def VERSION = version
def VCS = 'https://github.com/zhongzilu'
def WEBSITE = 'https://github.com/zhongzilu'

// 生成jar包
task releaseJar(type: Copy) {
    from('build/intermediates/bundles/default')
    into('../jar')
    include('classes.jar')
    rename('classes.jar', moduleName + version + '.jar')
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']

    pkg {
        repo = repoName
        name = moduleName
        publicDownloadNumbers = true
        publish = true

        version {
            name = VERSION
            desc = "$DESCRIPTION"
            vcsTag = VERSION
        }

        licenses = ['Apache-2.0']
        vcsUrl = VCS
        websiteUrl = WEBSITE
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.artifactId = moduleName
        pom {
            project {
                packaging 'aar'
                name moduleName
                url WEBSITE
                version = VERSION
                description "$DESCRIPTION"
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection VCS
                    developerConnection VCS
                    url WEBSITE
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.group == null) return
                    def dependencyNode = dependenciesNode.appendNode('dependency')

                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', "compile")
                }

                configurations.compileOnly.allDependencies.each {
                    if (it.group == null) return
                    def dependencyNode = dependenciesNode.appendNode('dependency')

                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', "provided")
                }
            }
        }
    }
}
